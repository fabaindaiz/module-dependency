from typing import Callable

class EventContext: ...

class EventSubscriber:
    callback: Callable[[EventContext], None]
    def __init__(self, callback: Callable[[EventContext], None]) -> None: ...
    def update(self, context: EventContext, threaded: bool = True) -> None: ...

class EventPublisher:
    def __init__(self) -> None: ...
    def subscribe(self, subscriber: type[EventSubscriber]) -> Callable: ...
    def update(self, context: EventContext) -> None: ...
